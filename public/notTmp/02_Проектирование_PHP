Создание одностраничного приложения для создания контактов (SPA)


ОБЯЗАТЕЛЬНОЕ ТРЕБОВАНИЕ К РАЗРАБОТКЕ ПРОЕТКТА - ПЕРЕД НЕПОСРЕДСТВЕННЫМ КОДИРОВАНИЕМ (КОНСТРУИРОВАНИЕМ)
    НУЖНО ВСЕГДА ПИСАТЬ ВСЕВДОКОД, ЧТОБЫ В ПОСЛЕДСТВИИ ИСПОЛЬЗОВАТЬ ЭТОТ ПСЕВДОКОД К КАЧЕСТВЕ КОММЕНТАРИЕВ.

00) Необходимые инструменты

    PHP фреймворк Laravel
        Провести
    Javascript фреймворк Vue js
    Css фреймворк Bootstrap
    Сервер баз данных Mysql

01) Регистрация (выполняется стандартными средствами Laravel)
    Сделать предварительные настройки для осуществления разворачивания стандартной регистрации в фреймворке Laravel
        Установить через композер библиотеку laravel/ui --dev
            composer require laravel/ui --dev

        Выпонить в командной строке команду
            php artisan ui vue --auth

        Применить миграции с помощью команды
            php artisam migrate

    Добавить в миграцию таблицы users поле token_auth (varchar,250,not null,unique)
    Добавить в контроллер регистрации поля токена
        ['token' => md5(uniqid(rand(), true)) ]
    Добавить в поле availables поле token, чтобы модель User могла внести пользователя в базу данных

    Сделать валидацию данных на стороне фреймворка laravel
        Валидация email пользователя
        Валидация идентичности вводимого пароля.

    ПРОВЕРИТЬ csrf токен для обращения в роутам Laravel.

    Все данные будут передаваться и получаться с помощью ajax (axios POST)

    ?????? Сделать свой собственный метод добавления нового пользователя ??????


    После проверки валидности вводимых данных осуществить добавление нового пользователя в базу данных и прислать
      ответ от сервера об успешности операции. (Как вариант json)

02) Авторизация
        Сделать свой собственный метод авторизации пользователя по токену

        Сделать валидацию данных на стороне фреймворка laravel
                Валидация наличия пользователя
                Валидация вводимого пароля.

03) Разлогирвание
         Сделать метод выхода в роутере Laravel logout (POST)
            Auth::logout()
            return "ok";
         Отправить ответ об успешном разлогированнии

04) Главная страница
        Создание группы роутов в файле роутов
        Создание главного котроллера IndexController.php
        Создать POST роут проверки аутентификации пользователя /isAuth
            Если пользователь авторизирован возвращать его объект модели User
            Иначе возвращать false

05) Страница контактов пользователя с тремя вкладками для манипуляции со своими контактами


06) Просмотр своих записей (/contacts/view)
        Создать в роутах роут ресурс
        Создать ресурсный контроллер
            Возвращать из метода show список 20-ти записей с учётом пагинации

07) Добавление контактов
        Метод добавления нового контакта

        Валидация на стороне фреймворка Laravel
            ответ от сервера
                https://stackoverflow.com/questions/32555058/laravel-5-validation-return-as-json-ajax
        При правильности всех данных добавить контакт в базу данных и переадресовать на страницу просмотра контактов

08) Редактирование контактов
        Метод редатирования контакта
        Валидация на стороне фреймворка Laravel
              ответ от сервера
                 https://stackoverflow.com/questions/32555058/laravel-5-validation-return-as-json-ajax

        При правильности всех данных обновить контакт в базе данных и переадресовать на страницу просмотра контактов

09) Создать маршрут в роутере фреймворка Laravel
         Route::resource(ContactsController)
    Создать контроллер ресурсов ContactsController

10) Просмотр истории логов
         Создать контроллер LogsController
         Cоздать метод logs возвращающий список логов пользователя из таблицы в базе данных
         Cоздать метод logsEvent принимающий id пользователя и event
            для записи в базу данных логов

         Создать метод logsExport который отдаёт пользователю на скачивание csv файл всех его логов

            https://stackoverflow.com/questions/54978597/download-file-from-php-server-with-vuejs

         Логи будут вестить при следующих операциях
            Регистрация пользователя (Регистрация)
            Вход пользователя (Авторизиция)
            Добавление нового конитакта
            Редактирование контакта
            Удаление контакта





















